<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.6 on darwin)" generated="20230426 15:11:55.941" rpa="false" schemaversion="3">
<suite id="s1" name="Resola Api Test" source="/Users/quynguyen/Desktop/Project/resola-qa-challenge/test_suites/resola_api_test.robot">
<test id="s1-t1" name="TC Track Event with valid input" line="8">
<kw name="Execute API" library="keywords">
<arg>valid_input</arg>
<kw name="Load Json From File" library="JSONLibrary">
<var>${file}</var>
<arg>../common/data.json</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20230426 15:11:56.035" level="INFO">${file} = {'valid_input': {'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5....</msg>
<status status="PASS" starttime="20230426 15:11:56.035" endtime="20230426 15:11:56.035"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AddData</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 15:11:56.035" level="INFO">Creating Session using : alias=AddData, url=https://sampleproject.ingest.mpdev.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 15:11:56.035" endtime="20230426 15:11:56.036"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${payload}</var>
<arg>${file}</arg>
<arg>$.${data}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230426 15:11:56.047" level="INFO">${payload} = [{'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5.0 (Windows NT 1...</msg>
<status status="PASS" starttime="20230426 15:11:56.036" endtime="20230426 15:11:56.047"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${body}</var>
<arg>json.dumps(${payload}).replace('[','').replace(']','')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230426 15:11:56.047" level="INFO">${body} = {"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "requestId": "123", "category": "shopping", "event": "add_to_cart", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10...</msg>
<status status="PASS" starttime="20230426 15:11:56.047" endtime="20230426 15:11:56.047"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 15:11:56.048" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230426 15:11:56.048" endtime="20230426 15:11:56.048"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>AddData</arg>
<arg>/v1/track</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20230426 15:11:56.048" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:56.678" level="INFO">POST Request : url=https://sampleproject.ingest.mpdev.io/v1/track 
 path_url=/v1/track 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '375'} 
 body=b'{"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "requestId": "123", "category": "shopping", "event": "add_to_cart", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3", "deviceType": "pc"}, "properties": {}, "sentAt": "2021-05-19T18:07:20.485290+00:00"}' 
 </msg>
<msg timestamp="20230426 15:11:56.679" level="INFO">POST Response : url=https://sampleproject.ingest.mpdev.io/v1/track 
 status=200, reason=OK 
 headers={'Date': 'Wed, 26 Apr 2023 08:11:56 GMT', 'Content-Type': 'application/json', 'Content-Length': '15', 'Connection': 'keep-alive', 'x-amzn-RequestId': '46fc47f7-e772-4bd3-954b-98dcb4164a34', 'Access-Control-Allow-Origin': '*', 'x-amz-apigw-id': 'D-dwAHkvtjMF92Q=', 'X-Amzn-Trace-Id': 'Root=1-6448dccc-54e962452f5793fd4a0d0ff9'} 
 body={"result":"ok"} 
 </msg>
<msg timestamp="20230426 15:11:56.679" level="INFO">/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sampleproject.ingest.mpdev.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230426 15:11:56.679" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230426 15:11:56.048" endtime="20230426 15:11:56.679"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${response.status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:56.682" level="INFO">${response_code} = 200</msg>
<status status="PASS" starttime="20230426 15:11:56.680" endtime="20230426 15:11:56.682"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.content}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:56.683" level="INFO">${response_body} = {"result":"ok"}</msg>
<status status="PASS" starttime="20230426 15:11:56.682" endtime="20230426 15:11:56.683"/>
</kw>
<status status="PASS" starttime="20230426 15:11:56.034" endtime="20230426 15:11:56.683"/>
</kw>
<kw name="Validation" library="keywords">
<arg>200</arg>
<arg>{"result":"ok"}</arg>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as integers</arg>
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230426 15:11:56.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:11:56.684" endtime="20230426 15:11:56.685"/>
</kw>
<status status="PASS" starttime="20230426 15:11:56.684" endtime="20230426 15:11:56.685"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230426 15:11:56.686" level="INFO">Argument types are:
&lt;class 'bytes'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:11:56.686" endtime="20230426 15:11:56.686"/>
</kw>
<status status="PASS" starttime="20230426 15:11:56.685" endtime="20230426 15:11:56.687"/>
</kw>
<status status="PASS" starttime="20230426 15:11:56.683" endtime="20230426 15:11:56.687"/>
</kw>
<status status="PASS" starttime="20230426 15:11:56.034" endtime="20230426 15:11:56.687"/>
</test>
<test id="s1-t2" name="TC Missing required `organizationId` field" line="12">
<kw name="Execute API" library="keywords">
<arg>missing_organizationId</arg>
<kw name="Load Json From File" library="JSONLibrary">
<var>${file}</var>
<arg>../common/data.json</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20230426 15:11:56.689" level="INFO">${file} = {'valid_input': {'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5....</msg>
<status status="PASS" starttime="20230426 15:11:56.688" endtime="20230426 15:11:56.689"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AddData</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 15:11:56.690" level="INFO">Creating Session using : alias=AddData, url=https://sampleproject.ingest.mpdev.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 15:11:56.689" endtime="20230426 15:11:56.690"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${payload}</var>
<arg>${file}</arg>
<arg>$.${data}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230426 15:11:56.714" level="INFO">${payload} = [{'projectId': 'string', 'anonymousId': 'string', 'userId': 'string', 'requestId': 'string', 'category': 'string', 'event': 'string', 'context': {'userAgent': 'string', 'deviceType': 'pc'}, 'propertie...</msg>
<status status="PASS" starttime="20230426 15:11:56.690" endtime="20230426 15:11:56.714"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${body}</var>
<arg>json.dumps(${payload}).replace('[','').replace(']','')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230426 15:11:56.715" level="INFO">${body} = {"projectId": "string", "anonymousId": "string", "userId": "string", "requestId": "string", "category": "string", "event": "string", "context": {"userAgent": "string", "deviceType": "pc"}, "properties...</msg>
<status status="PASS" starttime="20230426 15:11:56.714" endtime="20230426 15:11:56.715"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 15:11:56.715" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230426 15:11:56.715" endtime="20230426 15:11:56.715"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>AddData</arg>
<arg>/v1/track</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20230426 15:11:56.715" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:57.125" level="INFO">POST Request : url=https://sampleproject.ingest.mpdev.io/v1/track 
 path_url=/v1/track 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '226'} 
 body=b'{"projectId": "string", "anonymousId": "string", "userId": "string", "requestId": "string", "category": "string", "event": "string", "context": {"userAgent": "string", "deviceType": "pc"}, "properties": {}, "sentAt": "string"}' 
 </msg>
<msg timestamp="20230426 15:11:57.125" level="INFO">POST Response : url=https://sampleproject.ingest.mpdev.io/v1/track 
 status=400, reason=Bad Request 
 headers={'Date': 'Wed, 26 Apr 2023 08:11:57 GMT', 'Content-Type': 'application/json', 'Content-Length': '35', 'Connection': 'keep-alive', 'x-amzn-RequestId': '0d5d0e85-d055-4477-adcd-007285134255', 'x-amzn-ErrorType': 'BadRequestException', 'x-amz-apigw-id': 'D-dwFEIiNjMF3jg=', 'X-Amzn-Trace-Id': 'Root=1-6448dccd-2e3fb6e65195ec950392136f'} 
 body={"message": "Invalid request body"} 
 </msg>
<msg timestamp="20230426 15:11:57.126" level="INFO">/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sampleproject.ingest.mpdev.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230426 15:11:57.126" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20230426 15:11:56.715" endtime="20230426 15:11:57.126"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${response.status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:57.128" level="INFO">${response_code} = 400</msg>
<status status="PASS" starttime="20230426 15:11:57.126" endtime="20230426 15:11:57.128"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.content}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:57.129" level="INFO">${response_body} = {"message": "Invalid request body"}</msg>
<status status="PASS" starttime="20230426 15:11:57.128" endtime="20230426 15:11:57.129"/>
</kw>
<status status="PASS" starttime="20230426 15:11:56.688" endtime="20230426 15:11:57.130"/>
</kw>
<kw name="Validation" library="keywords">
<arg>400</arg>
<arg>{"message": "Invalid request body"}</arg>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as integers</arg>
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230426 15:11:57.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:11:57.131" endtime="20230426 15:11:57.131"/>
</kw>
<status status="PASS" starttime="20230426 15:11:57.130" endtime="20230426 15:11:57.131"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230426 15:11:57.133" level="INFO">Argument types are:
&lt;class 'bytes'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:11:57.132" endtime="20230426 15:11:57.133"/>
</kw>
<status status="PASS" starttime="20230426 15:11:57.132" endtime="20230426 15:11:57.133"/>
</kw>
<status status="PASS" starttime="20230426 15:11:57.130" endtime="20230426 15:11:57.133"/>
</kw>
<status status="PASS" starttime="20230426 15:11:56.688" endtime="20230426 15:11:57.134"/>
</test>
<test id="s1-t3" name="TC Missing required `projectId` field" line="16">
<kw name="Execute API" library="keywords">
<arg>missing_projectId</arg>
<kw name="Load Json From File" library="JSONLibrary">
<var>${file}</var>
<arg>../common/data.json</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20230426 15:11:57.136" level="INFO">${file} = {'valid_input': {'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5....</msg>
<status status="PASS" starttime="20230426 15:11:57.135" endtime="20230426 15:11:57.136"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AddData</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 15:11:57.136" level="INFO">Creating Session using : alias=AddData, url=https://sampleproject.ingest.mpdev.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 15:11:57.136" endtime="20230426 15:11:57.136"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${payload}</var>
<arg>${file}</arg>
<arg>$.${data}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230426 15:11:57.160" level="INFO">${payload} = [{'organizationId': 'string', 'anonymousId': 'string', 'userId': 'string', 'requestId': 'string', 'category': 'string', 'event': 'string', 'context': {'userAgent': 'string', 'deviceType': 'pc'}, 'prop...</msg>
<status status="PASS" starttime="20230426 15:11:57.136" endtime="20230426 15:11:57.161"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${body}</var>
<arg>json.dumps(${payload}).replace('[','').replace(']','')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230426 15:11:57.161" level="INFO">${body} = {"organizationId": "string", "anonymousId": "string", "userId": "string", "requestId": "string", "category": "string", "event": "string", "context": {"userAgent": "string", "deviceType": "pc"}, "prope...</msg>
<status status="PASS" starttime="20230426 15:11:57.161" endtime="20230426 15:11:57.161"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 15:11:57.161" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230426 15:11:57.161" endtime="20230426 15:11:57.161"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>AddData</arg>
<arg>/v1/track</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20230426 15:11:57.161" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:57.567" level="INFO">POST Request : url=https://sampleproject.ingest.mpdev.io/v1/track 
 path_url=/v1/track 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '231'} 
 body=b'{"organizationId": "string", "anonymousId": "string", "userId": "string", "requestId": "string", "category": "string", "event": "string", "context": {"userAgent": "string", "deviceType": "pc"}, "properties": {}, "sentAt": "string"}' 
 </msg>
<msg timestamp="20230426 15:11:57.567" level="INFO">POST Response : url=https://sampleproject.ingest.mpdev.io/v1/track 
 status=400, reason=Bad Request 
 headers={'Date': 'Wed, 26 Apr 2023 08:11:57 GMT', 'Content-Type': 'application/json', 'Content-Length': '35', 'Connection': 'keep-alive', 'x-amzn-RequestId': '747ceb96-0a41-4e01-95e1-c7feeef08bb1', 'x-amzn-ErrorType': 'BadRequestException', 'x-amz-apigw-id': 'D-dwKFLctjMF-8g=', 'X-Amzn-Trace-Id': 'Root=1-6448dccd-346970aa33b5fdd76072eb8e'} 
 body={"message": "Invalid request body"} 
 </msg>
<msg timestamp="20230426 15:11:57.568" level="INFO">/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sampleproject.ingest.mpdev.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230426 15:11:57.568" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20230426 15:11:57.161" endtime="20230426 15:11:57.568"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${response.status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:57.571" level="INFO">${response_code} = 400</msg>
<status status="PASS" starttime="20230426 15:11:57.569" endtime="20230426 15:11:57.571"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.content}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:57.572" level="INFO">${response_body} = {"message": "Invalid request body"}</msg>
<status status="PASS" starttime="20230426 15:11:57.571" endtime="20230426 15:11:57.572"/>
</kw>
<status status="PASS" starttime="20230426 15:11:57.134" endtime="20230426 15:11:57.572"/>
</kw>
<kw name="Validation" library="keywords">
<arg>400</arg>
<arg>{"message": "Invalid request body"}</arg>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as integers</arg>
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230426 15:11:57.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:11:57.573" endtime="20230426 15:11:57.574"/>
</kw>
<status status="PASS" starttime="20230426 15:11:57.573" endtime="20230426 15:11:57.574"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230426 15:11:57.575" level="INFO">Argument types are:
&lt;class 'bytes'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:11:57.575" endtime="20230426 15:11:57.575"/>
</kw>
<status status="PASS" starttime="20230426 15:11:57.575" endtime="20230426 15:11:57.575"/>
</kw>
<status status="PASS" starttime="20230426 15:11:57.573" endtime="20230426 15:11:57.576"/>
</kw>
<status status="PASS" starttime="20230426 15:11:57.134" endtime="20230426 15:11:57.576"/>
</test>
<test id="s1-t4" name="TC Missing required `requestId` field" line="20">
<kw name="Execute API" library="keywords">
<arg>missing_requestId</arg>
<kw name="Load Json From File" library="JSONLibrary">
<var>${file}</var>
<arg>../common/data.json</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20230426 15:11:57.579" level="INFO">${file} = {'valid_input': {'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5....</msg>
<status status="PASS" starttime="20230426 15:11:57.578" endtime="20230426 15:11:57.579"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AddData</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 15:11:57.579" level="INFO">Creating Session using : alias=AddData, url=https://sampleproject.ingest.mpdev.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 15:11:57.579" endtime="20230426 15:11:57.579"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${payload}</var>
<arg>${file}</arg>
<arg>$.${data}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230426 15:11:57.613" level="INFO">${payload} = [{'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) App...</msg>
<status status="PASS" starttime="20230426 15:11:57.580" endtime="20230426 15:11:57.613"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${body}</var>
<arg>json.dumps(${payload}).replace('[','').replace(']','')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230426 15:11:57.613" level="INFO">${body} = {"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "category": "shopping", "event": "add_to_cart", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) Appl...</msg>
<status status="PASS" starttime="20230426 15:11:57.613" endtime="20230426 15:11:57.613"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 15:11:57.613" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230426 15:11:57.613" endtime="20230426 15:11:57.613"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>AddData</arg>
<arg>/v1/track</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20230426 15:11:57.614" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:58.030" level="INFO">POST Request : url=https://sampleproject.ingest.mpdev.io/v1/track 
 path_url=/v1/track 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '355'} 
 body=b'{"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "category": "shopping", "event": "add_to_cart", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3", "deviceType": "pc"}, "properties": {}, "sentAt": "2021-05-19T18:07:20.485290+00:00"}' 
 </msg>
<msg timestamp="20230426 15:11:58.030" level="INFO">POST Response : url=https://sampleproject.ingest.mpdev.io/v1/track 
 status=400, reason=Bad Request 
 headers={'Date': 'Wed, 26 Apr 2023 08:11:57 GMT', 'Content-Type': 'application/json', 'Content-Length': '35', 'Connection': 'keep-alive', 'x-amzn-RequestId': '855834b3-f3ab-45de-9e9d-8b1568b54fbf', 'x-amzn-ErrorType': 'BadRequestException', 'x-amz-apigw-id': 'D-dwOHyGNjMFadQ=', 'X-Amzn-Trace-Id': 'Root=1-6448dccd-44a1d9074864f09e471513b4'} 
 body={"message": "Invalid request body"} 
 </msg>
<msg timestamp="20230426 15:11:58.031" level="INFO">/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sampleproject.ingest.mpdev.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230426 15:11:58.031" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20230426 15:11:57.613" endtime="20230426 15:11:58.031"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${response.status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:58.034" level="INFO">${response_code} = 400</msg>
<status status="PASS" starttime="20230426 15:11:58.032" endtime="20230426 15:11:58.034"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.content}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:58.035" level="INFO">${response_body} = {"message": "Invalid request body"}</msg>
<status status="PASS" starttime="20230426 15:11:58.034" endtime="20230426 15:11:58.035"/>
</kw>
<status status="PASS" starttime="20230426 15:11:57.577" endtime="20230426 15:11:58.035"/>
</kw>
<kw name="Validation" library="keywords">
<arg>400</arg>
<arg>{"message": "Invalid request body"}</arg>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as integers</arg>
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230426 15:11:58.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:11:58.037" endtime="20230426 15:11:58.037"/>
</kw>
<status status="PASS" starttime="20230426 15:11:58.036" endtime="20230426 15:11:58.038"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230426 15:11:58.039" level="INFO">Argument types are:
&lt;class 'bytes'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:11:58.038" endtime="20230426 15:11:58.039"/>
</kw>
<status status="PASS" starttime="20230426 15:11:58.038" endtime="20230426 15:11:58.039"/>
</kw>
<status status="PASS" starttime="20230426 15:11:58.036" endtime="20230426 15:11:58.039"/>
</kw>
<status status="PASS" starttime="20230426 15:11:57.577" endtime="20230426 15:11:58.040"/>
</test>
<test id="s1-t5" name="TC Missing required `category` field" line="24">
<kw name="Execute API" library="keywords">
<arg>missing_category</arg>
<kw name="Load Json From File" library="JSONLibrary">
<var>${file}</var>
<arg>../common/data.json</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20230426 15:11:58.042" level="INFO">${file} = {'valid_input': {'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5....</msg>
<status status="PASS" starttime="20230426 15:11:58.041" endtime="20230426 15:11:58.042"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AddData</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 15:11:58.042" level="INFO">Creating Session using : alias=AddData, url=https://sampleproject.ingest.mpdev.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 15:11:58.042" endtime="20230426 15:11:58.043"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${payload}</var>
<arg>${file}</arg>
<arg>$.${data}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230426 15:11:58.067" level="INFO">${payload} = [{'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWe...</msg>
<status status="PASS" starttime="20230426 15:11:58.043" endtime="20230426 15:11:58.067"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${body}</var>
<arg>json.dumps(${payload}).replace('[','').replace(']','')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230426 15:11:58.068" level="INFO">${body} = {"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "requestId": "123", "event": "add_to_cart", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWeb...</msg>
<status status="PASS" starttime="20230426 15:11:58.067" endtime="20230426 15:11:58.068"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 15:11:58.068" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230426 15:11:58.068" endtime="20230426 15:11:58.068"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>AddData</arg>
<arg>/v1/track</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20230426 15:11:58.068" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:58.547" level="INFO">POST Request : url=https://sampleproject.ingest.mpdev.io/v1/track 
 path_url=/v1/track 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '351'} 
 body=b'{"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "requestId": "123", "event": "add_to_cart", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3", "deviceType": "pc"}, "properties": {}, "sentAt": "2021-05-19T18:07:20.485290+00:00"}' 
 </msg>
<msg timestamp="20230426 15:11:58.547" level="INFO">POST Response : url=https://sampleproject.ingest.mpdev.io/v1/track 
 status=200, reason=OK 
 headers={'Date': 'Wed, 26 Apr 2023 08:11:58 GMT', 'Content-Type': 'application/json', 'Content-Length': '15', 'Connection': 'keep-alive', 'x-amzn-RequestId': '9130f0c8-5e21-41b4-a84f-29817dd9b7cd', 'Access-Control-Allow-Origin': '*', 'x-amz-apigw-id': 'D-dwTEB0NjMFqag=', 'X-Amzn-Trace-Id': 'Root=1-6448dcce-7d782d01325c1e262a963e0a'} 
 body={"result":"ok"} 
 </msg>
<msg timestamp="20230426 15:11:58.548" level="INFO">/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sampleproject.ingest.mpdev.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230426 15:11:58.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230426 15:11:58.068" endtime="20230426 15:11:58.548"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${response.status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:58.550" level="INFO">${response_code} = 200</msg>
<status status="PASS" starttime="20230426 15:11:58.548" endtime="20230426 15:11:58.550"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.content}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:58.552" level="INFO">${response_body} = {"result":"ok"}</msg>
<status status="PASS" starttime="20230426 15:11:58.551" endtime="20230426 15:11:58.552"/>
</kw>
<status status="PASS" starttime="20230426 15:11:58.041" endtime="20230426 15:11:58.552"/>
</kw>
<kw name="Validation" library="keywords">
<arg>400</arg>
<arg>{"message": "Invalid request body"}</arg>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as integers</arg>
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230426 15:11:58.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230426 15:11:58.555" level="FAIL">Failed, Actual status code: 200 - Expected status code: 400</msg>
<status status="FAIL" starttime="20230426 15:11:58.554" endtime="20230426 15:11:58.555"/>
</kw>
<status status="FAIL" starttime="20230426 15:11:58.553" endtime="20230426 15:11:58.555"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230426 15:11:58.556" level="INFO">Argument types are:
&lt;class 'bytes'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230426 15:11:58.557" level="FAIL">Failed, Actual body: {"result":"ok"} - Expected body: {"message": "Invalid request body"}</msg>
<status status="FAIL" starttime="20230426 15:11:58.556" endtime="20230426 15:11:58.557"/>
</kw>
<status status="FAIL" starttime="20230426 15:11:58.556" endtime="20230426 15:11:58.557"/>
</kw>
<status status="FAIL" starttime="20230426 15:11:58.553" endtime="20230426 15:11:58.558"/>
</kw>
<status status="FAIL" starttime="20230426 15:11:58.040" endtime="20230426 15:11:58.558">Several failures occurred:

1) Failed, Actual status code: 200 - Expected status code: 400

2) Failed, Actual body: {"result":"ok"} - Expected body: {"message": "Invalid request body"}</status>
</test>
<test id="s1-t6" name="TC Missing required `event` field" line="28">
<kw name="Execute API" library="keywords">
<arg>missing_event</arg>
<kw name="Load Json From File" library="JSONLibrary">
<var>${file}</var>
<arg>../common/data.json</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20230426 15:11:58.560" level="INFO">${file} = {'valid_input': {'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5....</msg>
<status status="PASS" starttime="20230426 15:11:58.559" endtime="20230426 15:11:58.560"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AddData</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 15:11:58.561" level="INFO">Creating Session using : alias=AddData, url=https://sampleproject.ingest.mpdev.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 15:11:58.560" endtime="20230426 15:11:58.561"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${payload}</var>
<arg>${file}</arg>
<arg>$.${data}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230426 15:11:58.584" level="INFO">${payload} = [{'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'context': {'userAgent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWe...</msg>
<status status="PASS" starttime="20230426 15:11:58.561" endtime="20230426 15:11:58.584"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${body}</var>
<arg>json.dumps(${payload}).replace('[','').replace(']','')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230426 15:11:58.584" level="INFO">${body} = {"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "requestId": "123", "category": "shopping", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWeb...</msg>
<status status="PASS" starttime="20230426 15:11:58.584" endtime="20230426 15:11:58.584"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 15:11:58.585" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230426 15:11:58.584" endtime="20230426 15:11:58.585"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>AddData</arg>
<arg>/v1/track</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20230426 15:11:58.585" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:58.993" level="INFO">POST Request : url=https://sampleproject.ingest.mpdev.io/v1/track 
 path_url=/v1/track 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '351'} 
 body=b'{"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "requestId": "123", "category": "shopping", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3", "deviceType": "pc"}, "properties": {}, "sentAt": "2021-05-19T18:07:20.485290+00:00"}' 
 </msg>
<msg timestamp="20230426 15:11:58.993" level="INFO">POST Response : url=https://sampleproject.ingest.mpdev.io/v1/track 
 status=400, reason=Bad Request 
 headers={'Date': 'Wed, 26 Apr 2023 08:11:58 GMT', 'Content-Type': 'application/json', 'Content-Length': '35', 'Connection': 'keep-alive', 'x-amzn-RequestId': 'd113cbb3-df4d-4d3e-91f2-f0b7de2105fd', 'x-amzn-ErrorType': 'BadRequestException', 'x-amz-apigw-id': 'D-dwYFN7NjMF-8g=', 'X-Amzn-Trace-Id': 'Root=1-6448dcce-21aff6512f23e782076ebe27'} 
 body={"message": "Invalid request body"} 
 </msg>
<msg timestamp="20230426 15:11:58.993" level="INFO">/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sampleproject.ingest.mpdev.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230426 15:11:58.994" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20230426 15:11:58.585" endtime="20230426 15:11:58.994"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${response.status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:58.996" level="INFO">${response_code} = 400</msg>
<status status="PASS" starttime="20230426 15:11:58.994" endtime="20230426 15:11:58.996"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.content}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:58.998" level="INFO">${response_body} = {"message": "Invalid request body"}</msg>
<status status="PASS" starttime="20230426 15:11:58.997" endtime="20230426 15:11:58.998"/>
</kw>
<status status="PASS" starttime="20230426 15:11:58.559" endtime="20230426 15:11:58.998"/>
</kw>
<kw name="Validation" library="keywords">
<arg>400</arg>
<arg>{"message": "Invalid request body"}</arg>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as integers</arg>
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230426 15:11:59.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:11:59.000" endtime="20230426 15:11:59.001"/>
</kw>
<status status="PASS" starttime="20230426 15:11:58.999" endtime="20230426 15:11:59.001"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230426 15:11:59.003" level="INFO">Argument types are:
&lt;class 'bytes'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:11:59.002" endtime="20230426 15:11:59.003"/>
</kw>
<status status="PASS" starttime="20230426 15:11:59.001" endtime="20230426 15:11:59.003"/>
</kw>
<status status="PASS" starttime="20230426 15:11:58.999" endtime="20230426 15:11:59.003"/>
</kw>
<status status="PASS" starttime="20230426 15:11:58.558" endtime="20230426 15:11:59.003"/>
</test>
<test id="s1-t7" name="TC Missing required `context` field" line="32">
<kw name="Execute API" library="keywords">
<arg>missing_context</arg>
<kw name="Load Json From File" library="JSONLibrary">
<var>${file}</var>
<arg>../common/data.json</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20230426 15:11:59.005" level="INFO">${file} = {'valid_input': {'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5....</msg>
<status status="PASS" starttime="20230426 15:11:59.004" endtime="20230426 15:11:59.005"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AddData</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 15:11:59.006" level="INFO">Creating Session using : alias=AddData, url=https://sampleproject.ingest.mpdev.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 15:11:59.006" endtime="20230426 15:11:59.006"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${payload}</var>
<arg>${file}</arg>
<arg>$.${data}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230426 15:11:59.031" level="INFO">${payload} = [{'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'properties': {}, 'sentAt': '2021-05-19T18:07:20.48...</msg>
<status status="PASS" starttime="20230426 15:11:59.006" endtime="20230426 15:11:59.031"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${body}</var>
<arg>json.dumps(${payload}).replace('[','').replace(']','')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230426 15:11:59.032" level="INFO">${body} = {"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "requestId": "123", "category": "shopping", "event": "add_to_cart", "properties": {}, "sentAt": "2021-05-19T18:07:20.485...</msg>
<status status="PASS" starttime="20230426 15:11:59.031" endtime="20230426 15:11:59.032"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 15:11:59.032" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230426 15:11:59.032" endtime="20230426 15:11:59.032"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>AddData</arg>
<arg>/v1/track</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20230426 15:11:59.032" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:59.437" level="INFO">POST Request : url=https://sampleproject.ingest.mpdev.io/v1/track 
 path_url=/v1/track 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '211'} 
 body=b'{"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "requestId": "123", "category": "shopping", "event": "add_to_cart", "properties": {}, "sentAt": "2021-05-19T18:07:20.485290+00:00"}' 
 </msg>
<msg timestamp="20230426 15:11:59.437" level="INFO">POST Response : url=https://sampleproject.ingest.mpdev.io/v1/track 
 status=400, reason=Bad Request 
 headers={'Date': 'Wed, 26 Apr 2023 08:11:59 GMT', 'Content-Type': 'application/json', 'Content-Length': '35', 'Connection': 'keep-alive', 'x-amzn-RequestId': '0a5aca2a-ae0b-4028-a89e-e03f23e078dd', 'x-amzn-ErrorType': 'BadRequestException', 'x-amz-apigw-id': 'D-dwcE84tjMFYTA=', 'X-Amzn-Trace-Id': 'Root=1-6448dccf-27d5e5441016c74c5d999a89'} 
 body={"message": "Invalid request body"} 
 </msg>
<msg timestamp="20230426 15:11:59.438" level="INFO">/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sampleproject.ingest.mpdev.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230426 15:11:59.438" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20230426 15:11:59.032" endtime="20230426 15:11:59.438"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${response.status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:59.441" level="INFO">${response_code} = 400</msg>
<status status="PASS" starttime="20230426 15:11:59.439" endtime="20230426 15:11:59.441"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.content}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:59.442" level="INFO">${response_body} = {"message": "Invalid request body"}</msg>
<status status="PASS" starttime="20230426 15:11:59.441" endtime="20230426 15:11:59.442"/>
</kw>
<status status="PASS" starttime="20230426 15:11:59.004" endtime="20230426 15:11:59.442"/>
</kw>
<kw name="Validation" library="keywords">
<arg>400</arg>
<arg>{"message": "Invalid request body"}</arg>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as integers</arg>
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230426 15:11:59.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:11:59.443" endtime="20230426 15:11:59.444"/>
</kw>
<status status="PASS" starttime="20230426 15:11:59.443" endtime="20230426 15:11:59.444"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230426 15:11:59.445" level="INFO">Argument types are:
&lt;class 'bytes'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:11:59.445" endtime="20230426 15:11:59.445"/>
</kw>
<status status="PASS" starttime="20230426 15:11:59.444" endtime="20230426 15:11:59.445"/>
</kw>
<status status="PASS" starttime="20230426 15:11:59.443" endtime="20230426 15:11:59.445"/>
</kw>
<status status="PASS" starttime="20230426 15:11:59.004" endtime="20230426 15:11:59.446"/>
</test>
<test id="s1-t8" name="TC Missing required `properties` field" line="36">
<kw name="Execute API" library="keywords">
<arg>missing_properties</arg>
<kw name="Load Json From File" library="JSONLibrary">
<var>${file}</var>
<arg>../common/data.json</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20230426 15:11:59.448" level="INFO">${file} = {'valid_input': {'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5....</msg>
<status status="PASS" starttime="20230426 15:11:59.447" endtime="20230426 15:11:59.448"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AddData</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 15:11:59.449" level="INFO">Creating Session using : alias=AddData, url=https://sampleproject.ingest.mpdev.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 15:11:59.449" endtime="20230426 15:11:59.449"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${payload}</var>
<arg>${file}</arg>
<arg>$.${data}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230426 15:11:59.473" level="INFO">${payload} = [{'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5.0 (Windows NT 1...</msg>
<status status="PASS" starttime="20230426 15:11:59.449" endtime="20230426 15:11:59.473"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${body}</var>
<arg>json.dumps(${payload}).replace('[','').replace(']','')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230426 15:11:59.474" level="INFO">${body} = {"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "requestId": "123", "category": "shopping", "event": "add_to_cart", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10...</msg>
<status status="PASS" starttime="20230426 15:11:59.474" endtime="20230426 15:11:59.474"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 15:11:59.474" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230426 15:11:59.474" endtime="20230426 15:11:59.474"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>AddData</arg>
<arg>/v1/track</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20230426 15:11:59.474" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:59.890" level="INFO">POST Request : url=https://sampleproject.ingest.mpdev.io/v1/track 
 path_url=/v1/track 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '357'} 
 body=b'{"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "requestId": "123", "category": "shopping", "event": "add_to_cart", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3", "deviceType": "pc"}, "sentAt": "2021-05-19T18:07:20.485290+00:00"}' 
 </msg>
<msg timestamp="20230426 15:11:59.890" level="INFO">POST Response : url=https://sampleproject.ingest.mpdev.io/v1/track 
 status=400, reason=Bad Request 
 headers={'Date': 'Wed, 26 Apr 2023 08:11:59 GMT', 'Content-Type': 'application/json', 'Content-Length': '35', 'Connection': 'keep-alive', 'x-amzn-RequestId': '8f366d38-dee5-4883-b497-0b6fe4d46c70', 'x-amzn-ErrorType': 'BadRequestException', 'x-amz-apigw-id': 'D-dwhHTDtjMF9jA=', 'X-Amzn-Trace-Id': 'Root=1-6448dccf-31674b1919839544415bad49'} 
 body={"message": "Invalid request body"} 
 </msg>
<msg timestamp="20230426 15:11:59.890" level="INFO">/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sampleproject.ingest.mpdev.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230426 15:11:59.890" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20230426 15:11:59.474" endtime="20230426 15:11:59.890"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${response.status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:59.892" level="INFO">${response_code} = 400</msg>
<status status="PASS" starttime="20230426 15:11:59.891" endtime="20230426 15:11:59.892"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.content}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:11:59.893" level="INFO">${response_body} = {"message": "Invalid request body"}</msg>
<status status="PASS" starttime="20230426 15:11:59.892" endtime="20230426 15:11:59.893"/>
</kw>
<status status="PASS" starttime="20230426 15:11:59.447" endtime="20230426 15:11:59.893"/>
</kw>
<kw name="Validation" library="keywords">
<arg>400</arg>
<arg>{"message": "Invalid request body"}</arg>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as integers</arg>
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230426 15:11:59.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:11:59.894" endtime="20230426 15:11:59.895"/>
</kw>
<status status="PASS" starttime="20230426 15:11:59.894" endtime="20230426 15:11:59.895"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230426 15:11:59.896" level="INFO">Argument types are:
&lt;class 'bytes'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:11:59.895" endtime="20230426 15:11:59.896"/>
</kw>
<status status="PASS" starttime="20230426 15:11:59.895" endtime="20230426 15:11:59.896"/>
</kw>
<status status="PASS" starttime="20230426 15:11:59.893" endtime="20230426 15:11:59.896"/>
</kw>
<status status="PASS" starttime="20230426 15:11:59.446" endtime="20230426 15:11:59.896"/>
</test>
<test id="s1-t9" name="TC Missing required `sentAt` field" line="40">
<kw name="Execute API" library="keywords">
<arg>missing_sentAt</arg>
<kw name="Load Json From File" library="JSONLibrary">
<var>${file}</var>
<arg>../common/data.json</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20230426 15:11:59.898" level="INFO">${file} = {'valid_input': {'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5....</msg>
<status status="PASS" starttime="20230426 15:11:59.897" endtime="20230426 15:11:59.898"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AddData</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 15:11:59.899" level="INFO">Creating Session using : alias=AddData, url=https://sampleproject.ingest.mpdev.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 15:11:59.898" endtime="20230426 15:11:59.899"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${payload}</var>
<arg>${file}</arg>
<arg>$.${data}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230426 15:11:59.924" level="INFO">${payload} = [{'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5.0 (Windows NT 1...</msg>
<status status="PASS" starttime="20230426 15:11:59.899" endtime="20230426 15:11:59.924"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${body}</var>
<arg>json.dumps(${payload}).replace('[','').replace(']','')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230426 15:11:59.925" level="INFO">${body} = {"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "requestId": "123", "category": "shopping", "event": "add_to_cart", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10...</msg>
<status status="PASS" starttime="20230426 15:11:59.924" endtime="20230426 15:11:59.925"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 15:11:59.925" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230426 15:11:59.925" endtime="20230426 15:11:59.925"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>AddData</arg>
<arg>/v1/track</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20230426 15:11:59.925" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:12:00.331" level="INFO">POST Request : url=https://sampleproject.ingest.mpdev.io/v1/track 
 path_url=/v1/track 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '329'} 
 body=b'{"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "requestId": "123", "category": "shopping", "event": "add_to_cart", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3", "deviceType": "pc"}, "properties": {}}' 
 </msg>
<msg timestamp="20230426 15:12:00.332" level="INFO">POST Response : url=https://sampleproject.ingest.mpdev.io/v1/track 
 status=400, reason=Bad Request 
 headers={'Date': 'Wed, 26 Apr 2023 08:12:00 GMT', 'Content-Type': 'application/json', 'Content-Length': '35', 'Connection': 'keep-alive', 'x-amzn-RequestId': '05d32ad7-c544-4c37-b8a8-b55e8608ab29', 'x-amzn-ErrorType': 'BadRequestException', 'x-amz-apigw-id': 'D-dwlHrbNjMF37A=', 'X-Amzn-Trace-Id': 'Root=1-6448dcd0-1d51495c415d2a7d6766ee44'} 
 body={"message": "Invalid request body"} 
 </msg>
<msg timestamp="20230426 15:12:00.332" level="INFO">/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sampleproject.ingest.mpdev.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230426 15:12:00.332" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20230426 15:11:59.925" endtime="20230426 15:12:00.333"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${response.status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:12:00.335" level="INFO">${response_code} = 400</msg>
<status status="PASS" starttime="20230426 15:12:00.333" endtime="20230426 15:12:00.335"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.content}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:12:00.336" level="INFO">${response_body} = {"message": "Invalid request body"}</msg>
<status status="PASS" starttime="20230426 15:12:00.335" endtime="20230426 15:12:00.336"/>
</kw>
<status status="PASS" starttime="20230426 15:11:59.897" endtime="20230426 15:12:00.336"/>
</kw>
<kw name="Validation" library="keywords">
<arg>400</arg>
<arg>{"message": "Invalid request body"}</arg>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as integers</arg>
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230426 15:12:00.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:12:00.338" endtime="20230426 15:12:00.339"/>
</kw>
<status status="PASS" starttime="20230426 15:12:00.337" endtime="20230426 15:12:00.339"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230426 15:12:00.339" level="INFO">Argument types are:
&lt;class 'bytes'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:12:00.339" endtime="20230426 15:12:00.340"/>
</kw>
<status status="PASS" starttime="20230426 15:12:00.339" endtime="20230426 15:12:00.340"/>
</kw>
<status status="PASS" starttime="20230426 15:12:00.336" endtime="20230426 15:12:00.340"/>
</kw>
<status status="PASS" starttime="20230426 15:11:59.896" endtime="20230426 15:12:00.340"/>
</test>
<test id="s1-t10" name="TC Invalid value for `deviceType` field" line="44">
<kw name="Execute API" library="keywords">
<arg>wrong_devicetype</arg>
<kw name="Load Json From File" library="JSONLibrary">
<var>${file}</var>
<arg>../common/data.json</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20230426 15:12:00.342" level="INFO">${file} = {'valid_input': {'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5....</msg>
<status status="PASS" starttime="20230426 15:12:00.341" endtime="20230426 15:12:00.342"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AddData</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 15:12:00.343" level="INFO">Creating Session using : alias=AddData, url=https://sampleproject.ingest.mpdev.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 15:12:00.342" endtime="20230426 15:12:00.343"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${payload}</var>
<arg>${file}</arg>
<arg>$.${data}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230426 15:12:00.367" level="INFO">${payload} = [{'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5.0 (Windows NT 1...</msg>
<status status="PASS" starttime="20230426 15:12:00.343" endtime="20230426 15:12:00.367"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${body}</var>
<arg>json.dumps(${payload}).replace('[','').replace(']','')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230426 15:12:00.367" level="INFO">${body} = {"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "requestId": "123", "category": "shopping", "event": "add_to_cart", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10...</msg>
<status status="PASS" starttime="20230426 15:12:00.367" endtime="20230426 15:12:00.367"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 15:12:00.367" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230426 15:12:00.367" endtime="20230426 15:12:00.368"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>AddData</arg>
<arg>/v1/track</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20230426 15:12:00.368" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:12:00.855" level="INFO">POST Request : url=https://sampleproject.ingest.mpdev.io/v1/track 
 path_url=/v1/track 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '379'} 
 body=b'{"organizationId": "myorg", "projectId": "myproject", "anonymousId": "user123", "requestId": "123", "category": "shopping", "event": "add_to_cart", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3", "deviceType": "tablet"}, "properties": {}, "sentAt": "2021-05-19T18:07:20.485290+00:00"}' 
 </msg>
<msg timestamp="20230426 15:12:00.855" level="INFO">POST Response : url=https://sampleproject.ingest.mpdev.io/v1/track 
 status=200, reason=OK 
 headers={'Date': 'Wed, 26 Apr 2023 08:12:00 GMT', 'Content-Type': 'application/json', 'Content-Length': '15', 'Connection': 'keep-alive', 'x-amzn-RequestId': 'ce3acb8b-2420-4dd1-a989-e3112222be85', 'Access-Control-Allow-Origin': '*', 'x-amz-apigw-id': 'D-dwqGOoNjMF_vA=', 'X-Amzn-Trace-Id': 'Root=1-6448dcd0-6e48541e7ea0ec822508a0fe'} 
 body={"result":"ok"} 
 </msg>
<msg timestamp="20230426 15:12:00.855" level="INFO">/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sampleproject.ingest.mpdev.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230426 15:12:00.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230426 15:12:00.368" endtime="20230426 15:12:00.856"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${response.status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:12:00.859" level="INFO">${response_code} = 200</msg>
<status status="PASS" starttime="20230426 15:12:00.856" endtime="20230426 15:12:00.859"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.content}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:12:00.861" level="INFO">${response_body} = {"result":"ok"}</msg>
<status status="PASS" starttime="20230426 15:12:00.859" endtime="20230426 15:12:00.861"/>
</kw>
<status status="PASS" starttime="20230426 15:12:00.341" endtime="20230426 15:12:00.861"/>
</kw>
<kw name="Validation" library="keywords">
<arg>400</arg>
<arg>{"message": "Invalid request body"}</arg>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as integers</arg>
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230426 15:12:00.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230426 15:12:00.863" level="FAIL">Failed, Actual status code: 200 - Expected status code: 400</msg>
<status status="FAIL" starttime="20230426 15:12:00.862" endtime="20230426 15:12:00.863"/>
</kw>
<status status="FAIL" starttime="20230426 15:12:00.862" endtime="20230426 15:12:00.863"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230426 15:12:00.864" level="INFO">Argument types are:
&lt;class 'bytes'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230426 15:12:00.864" level="FAIL">Failed, Actual body: {"result":"ok"} - Expected body: {"message": "Invalid request body"}</msg>
<status status="FAIL" starttime="20230426 15:12:00.864" endtime="20230426 15:12:00.865"/>
</kw>
<status status="FAIL" starttime="20230426 15:12:00.864" endtime="20230426 15:12:00.865"/>
</kw>
<status status="FAIL" starttime="20230426 15:12:00.861" endtime="20230426 15:12:00.865"/>
</kw>
<status status="FAIL" starttime="20230426 15:12:00.340" endtime="20230426 15:12:00.866">Several failures occurred:

1) Failed, Actual status code: 200 - Expected status code: 400

2) Failed, Actual body: {"result":"ok"} - Expected body: {"message": "Invalid request body"}</status>
</test>
<test id="s1-t11" name="TC Invalid data type" line="48">
<kw name="Execute API" library="keywords">
<arg>invalid_data_type_userId</arg>
<kw name="Load Json From File" library="JSONLibrary">
<var>${file}</var>
<arg>../common/data.json</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20230426 15:12:00.868" level="INFO">${file} = {'valid_input': {'organizationId': 'myorg', 'projectId': 'myproject', 'anonymousId': 'user123', 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5....</msg>
<status status="PASS" starttime="20230426 15:12:00.867" endtime="20230426 15:12:00.868"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>AddData</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230426 15:12:00.868" level="INFO">Creating Session using : alias=AddData, url=https://sampleproject.ingest.mpdev.io/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230426 15:12:00.868" endtime="20230426 15:12:00.869"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${payload}</var>
<arg>${file}</arg>
<arg>$.${data}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230426 15:12:00.891" level="INFO">${payload} = [{'organizationId': 'myorg', 'projectId': 'myproject', 'userId': 1234, 'requestId': '123', 'category': 'shopping', 'event': 'add_to_cart', 'context': {'userAgent': 'Mozilla/5.0 (Windows NT 10.0; Win64...</msg>
<status status="PASS" starttime="20230426 15:12:00.869" endtime="20230426 15:12:00.891"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${body}</var>
<arg>json.dumps(${payload}).replace('[','').replace(']','')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230426 15:12:00.892" level="INFO">${body} = {"organizationId": "myorg", "projectId": "myproject", "userId": 1234, "requestId": "123", "category": "shopping", "event": "add_to_cart", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64;...</msg>
<status status="PASS" starttime="20230426 15:12:00.891" endtime="20230426 15:12:00.892"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230426 15:12:00.892" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230426 15:12:00.892" endtime="20230426 15:12:00.892"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>AddData</arg>
<arg>/v1/track</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20230426 15:12:00.892" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:12:01.305" level="INFO">POST Request : url=https://sampleproject.ingest.mpdev.io/v1/track 
 path_url=/v1/track 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '365'} 
 body=b'{"organizationId": "myorg", "projectId": "myproject", "userId": 1234, "requestId": "123", "category": "shopping", "event": "add_to_cart", "context": {"userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3", "deviceType": "pc"}, "properties": {}, "sentAt": "2021-05-19T18:07:20.485290+00:00"}' 
 </msg>
<msg timestamp="20230426 15:12:01.305" level="INFO">POST Response : url=https://sampleproject.ingest.mpdev.io/v1/track 
 status=400, reason=Bad Request 
 headers={'Date': 'Wed, 26 Apr 2023 08:12:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '35', 'Connection': 'keep-alive', 'x-amzn-RequestId': '0b02732a-ed93-4c14-af3e-b67e24c1896d', 'x-amzn-ErrorType': 'BadRequestException', 'x-amz-apigw-id': 'D-dwvFFnNjMF_jQ=', 'X-Amzn-Trace-Id': 'Root=1-6448dcd1-7278df6539ee9ade46072dc8'} 
 body={"message": "Invalid request body"} 
 </msg>
<msg timestamp="20230426 15:12:01.306" level="INFO">/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/connectionpool.py:1045: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sampleproject.ingest.mpdev.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230426 15:12:01.306" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20230426 15:12:00.892" endtime="20230426 15:12:01.306"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${response.status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:12:01.309" level="INFO">${response_code} = 400</msg>
<status status="PASS" starttime="20230426 15:12:01.307" endtime="20230426 15:12:01.309"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${response.content}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230426 15:12:01.310" level="INFO">${response_body} = {"message": "Invalid request body"}</msg>
<status status="PASS" starttime="20230426 15:12:01.309" endtime="20230426 15:12:01.310"/>
</kw>
<status status="PASS" starttime="20230426 15:12:00.867" endtime="20230426 15:12:01.311"/>
</kw>
<kw name="Validation" library="keywords">
<arg>400</arg>
<arg>{"message": "Invalid request body"}</arg>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as integers</arg>
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_code}</arg>
<arg>${expected_status_code}</arg>
<arg>msg=Failed, Actual status code: ${response_code} - Expected status code: ${expected_status_code}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230426 15:12:01.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:12:01.312" endtime="20230426 15:12:01.312"/>
</kw>
<status status="PASS" starttime="20230426 15:12:01.311" endtime="20230426 15:12:01.313"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>should be equal as strings</arg>
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response_body}</arg>
<arg>${expected_body}</arg>
<arg>msg=Failed, Actual body: ${response_body} - Expected body: ${expected_body}</arg>
<arg>values=False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230426 15:12:01.314" level="INFO">Argument types are:
&lt;class 'bytes'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230426 15:12:01.313" endtime="20230426 15:12:01.314"/>
</kw>
<status status="PASS" starttime="20230426 15:12:01.313" endtime="20230426 15:12:01.314"/>
</kw>
<status status="PASS" starttime="20230426 15:12:01.311" endtime="20230426 15:12:01.314"/>
</kw>
<status status="PASS" starttime="20230426 15:12:00.866" endtime="20230426 15:12:01.314"/>
</test>
<status status="FAIL" starttime="20230426 15:11:55.942" endtime="20230426 15:12:01.315"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="2" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="9" fail="2" skip="0" id="s1" name="Resola Api Test">Resola Api Test</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230426 15:11:56.048" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:56.715" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:57.161" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:57.614" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:58.068" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:58.585" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:59.032" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:59.474" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:11:59.925" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:12:00.368" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20230426 15:12:00.892" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
</errors>
</robot>
